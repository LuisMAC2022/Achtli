name: Build and Deploy

on:
  push:
    branches: [main]      # dispara cuando haces push a la rama main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Clona tu repo
      - uses: actions/checkout@v4

      # 2. Instala la toolchain de Rust (stable por defecto)
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable   # puedes cambiar a nightly, beta o 1.x.y

      # 3. Instala Node.js v20
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 4. Instala wasm-pack
      - name: Install wasm-pack
        run: curl -sSf https://rustwasm.github.io/wasm-pack/installer/init.sh | sh

      # 5. Compila tu paquete WebAssembly (carpeta `wasm_game`)
      - name: Build wasm package
        run: wasm-pack build --target web wasm_game

      # 6. Construye el sitio Jekyll
      - name: Build Jekyll site
        run: bundle exec jekyll build

      # 7. Publica en GitHub Pages (rama gh-pages por defecto)
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site

      # 8. Actualiza los placeholders ‘<<git SHA>>’ en archivos de decisiones
      - name: Update decision SHA
        run: |
          files=$(grep -rl '<<git SHA>>' decisiones/*.md || true)
          if [ -n "$files" ]; then
            for f in $files; do
              bash scripts/update_decision_sha.sh "$f" "$GITHUB_SHA"
            done
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add $files
            git commit -m "Update decision SHA [skip ci]" || echo "No changes to commit"
            git push
          fi
